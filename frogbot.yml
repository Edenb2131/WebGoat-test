# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

schedules:
  - cron: '0 0 * * *'
    displayName: Daily midnight build
    branches:
      include:
        - main

pr: none
trigger: none

pool:
  name: Default

variables:
  JF_GIT_PROJECT: $(System.TeamProject)
  JF_GIT_REPO: $(Build.Repository.Name)
  JF_GIT_API_ENDPOINT: $(System.CollectionUri)
  JF_GIT_BASE_BRANCH: $(Build.SourceBranchName)
  JF_GIT_OWNER: $(System.TeamProject)
  JF_GIT_PROVIDER: 'github'

jobs:
  - job:
      displayName: "Frogbot Scan Repository and Fix"
      steps:
        - task: CmdLine@2
          displayName: 'Download and Run Frogbot'
          env:
            JF_URL: $(JF_URL)
            JF_ACCESS_TOKEN: $(JF_ACCESS_TOKEN)
            JF_GIT_TOKEN: $(JF_GIT_TOKEN)
            
            # [Optional] Xray Watches (ensure proper JSON format)
            JF_WATCHES: ["amit"]

            # [Optional, default: "FALSE"]
            JF_FAIL: "FALSE"

            # [Optional, default: "FALSE"]
            JF_FIXABLE_ONLY: "TRUE"

            # [Optional, default: "FALSE"]
            JF_GIT_AGGREGATE_FIXES: "FALSE"

          inputs:
            script: |
              getFrogbotScriptPath=$(if [ -z "$JF_RELEASES_REPO" ]; then echo "https://releases.jfrog.io"; else echo "${JF_URL}/artifactory/${JF_RELEASES_REPO}"; fi)
              curl -fLg "$getFrogbotScriptPath/artifactory/frogbot/v2/[RELEASE]/getFrogbot.sh" | sh
              ./frogbot cfpr
